diff --git a/liveusb/gui.py b/liveusb/gui.py
index 659516e..b4b6d79 100755
--- a/liveusb/gui.py
+++ b/liveusb/gui.py
@@ -34,7 +34,7 @@ from datetime import datetime
 from PyQt4 import QtCore, QtGui
 
 from liveusb import LiveUSBCreator, LiveUSBError, LiveUSBInterface, _
-from liveusb.releases import releases, get_fedora_releases
+from liveusb.releases import releases, get_fedora_releases, RFREMIX_RELEASES, FEDORA_RELEASES
 if sys.platform == 'win32':
     from liveusb.urlgrabber.grabber import URLGrabber, URLGrabError
     from liveusb.urlgrabber.progress import BaseMeter
@@ -277,7 +277,7 @@ class LiveUSBDialog(QtGui.QDialog, LiveUSBInterface):
         self.args = args
         self.setupUi(self)
         self.live = LiveUSBCreator(opts=opts)
-        self.populate_releases()
+        self.refresh_releases()
         self.populate_devices()
         self.downloader = None
         self.progress_thread = ProgressThread()
@@ -338,7 +338,7 @@ class LiveUSBDialog(QtGui.QDialog, LiveUSBInterface):
 
     def refresh_releases(self):
         self.live.log.info(_('Refreshing releases...'))
-        fedora_releases = get_fedora_releases()
+        fedora_releases = get_fedora_releases(RFREMIX_RELEASES) + get_fedora_releases(FEDORA_RELEASES)
         self.downloadCombo.clear()
         for release in [release['name'] for release in fedora_releases]:
             self.downloadCombo.addItem(release)
diff --git a/liveusb/releases.py b/liveusb/releases.py
index b483d7b..eb8e11c 100644
--- a/liveusb/releases.py
+++ b/liveusb/releases.py
@@ -3,7 +3,8 @@ from urlgrabber import urlread
 from urlgrabber.grabber import URLGrabError
 
 FEDORA_RELEASES = 'http://dl.fedoraproject.org/pub/fedora/linux/releases/'
-ARCHES = ('i386', 'i686', 'x86_64')
+RFREMIX_RELEASES = 'http://mirror.yandex.ru/fedora/russianfedora/releases/RFRemix/'
+ARCHES = ('x86_64', 'i686', 'i386')
 
 # A backup list of releases, just in case we can't fetch them.
 fedora_releases = [
@@ -59,39 +60,52 @@ other_releases = [
 releases = fedora_releases + other_releases
 
 
-def get_fedora_releases():
-    global releases
-    fedora_releases = []
-    try:
-        html = urlread(FEDORA_RELEASES)
-        for release in re.findall(r'<a href="(\d+)/">', html)[-2:][::-1]:
-            for arch in ARCHES:
-                arch_url = FEDORA_RELEASES + '%s/Live/%s/' % (release, arch)
-                try:
-                    files = urlread(arch_url)
-                except URLGrabError:
-                    continue
-                for link in re.findall(r'<a href="(.*)">', files):
-                    if link.endswith('-CHECKSUM'):
-                        checksum = urlread(arch_url + link)
-                        for line in checksum.split('\n'):
-                            try:
-                                sha256, filename = line.split()
-                                if filename[0] != '*':
-                                    continue
+def get_fedora_releases(url):
+    releases = []
+    html = urlread(url)
+
+    # RFRemix distributions can have '.' in version.
+    # This code chooses the latest version for three last distributions.
+    # It's mean for 18, 17.1, 17, 16.1, 16, 15.1 and so on it will be 18, 17.1 and 16.1
+
+    # This code is dirty. Feel to free improve it.
+    all_releases = re.findall(r'<a href="(\d+\.?\d?)/">', html)[::-1]
+    target_releases = all_releases[:1]
+    last_release = int(target_releases[0].split('.')[0])
+    prev_release = last_release - 1
+    for release in all_releases:
+        if int(release.split('.')[0]) == prev_release:
+            target_releases.append(release)
+            prev_release = prev_release - 1
+        if prev_release == last_release - 3:
+            break
+
+    for release in target_releases:
+        for arch in ARCHES:
+            arch_url = url + '%s/Live/%s/' % (release, arch)
+            try:
+                files = urlread(arch_url)
+            except URLGrabError:
+                continue
+            for link in re.findall(r'<a href="(.*)">', files):
+                if link.endswith('-CHECKSUM'):
+                    checksum = urlread(arch_url + link)
+                    for line in checksum.split('\n'):
+                        try:
+                            sha256, filename = line.split()
+                            if filename.endswith('.iso') == False:
+                                continue
+
+                            if filename[0] == '*':
                                 filename = filename[1:]
-                                chunks = filename[:-4].split('-')
-                                chunks.remove('Live')
-                                name = ' '.join(chunks)
-                                fedora_releases.append(dict(
-                                    name=name,
-                                    url=arch_url + filename,
-                                    sha256=sha256,
+                            chunks = filename[:-4].split('-')
+                            chunks.remove('Live')
+                            name = ' '.join(chunks)
+                            releases.append(dict(
+                                name = name,
+                                url = arch_url + filename,
+                                sha256 = sha256,
                                 ))
-                            except ValueError:
-                                pass
-        releases = fedora_releases + other_releases
-    except:
-        # Can't fetch releases from the internet.
-        releases += other_releases
+                        except ValueError:
+                            pass
     return releases
